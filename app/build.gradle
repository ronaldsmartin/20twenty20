apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'org.jetbrains.dokka-android'

buildscript {
    ext.kotlin_version = '1.0.3'
    ext.dokka_version = '0.9.8'
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:$dokka_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.itsronald.twenty2020"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-DEBUG"

            // Get API Keys from Gradle properties. These are overridden in CI by environmental
            // variables.
            resValue 'string', 'android_backup_api_key', ANDROID_BACKUP_API_KEY_DEBUG

            minifyEnabled false // Currently breaks build when enabled (Kotlin 1.0.2, Dagger 2.2)
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            // Get API Keys from Gradle properties. These are overridden in CI by environmental
            // variables.
            resValue 'string', 'android_backup_api_key', ANDROID_BACKUP_API_KEY_RELEASE

            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

kapt {
    generateStubs = true
}

dependencies {
    // Tools
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    debugCompile "com.squareup.leakcanary:leakcanary-android:$rootProject.leakCanaryVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakCanaryVersion"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakCanaryVersion"
    compile "com.android.support.constraint:constraint-layout:$rootProject.constraintLibVersion"

    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Android Support Libs
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-vector-drawable:$rootProject.supportLibraryVersion"
    compile "com.android.support:customtabs:$rootProject.supportLibraryVersion"

    // Dagger2
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    compile "com.google.dagger:dagger:$rootProject.daggerVersion"
    provided "javax.annotation:jsr250-api:$rootProject.javaAnnotationsVersion"

    // RxJava
    compile "io.reactivex:rxandroid:$rootProject.rxAndroidVersion"
    compile "io.reactivex:rxjava:$rootProject.rxJavaVersion"
    compile "io.reactivex:rxkotlin:$rootProject.rxKotlinVersion"
    compile "com.artemzin.rxjava:proguard-rules:$rootProject.rxJavaProguardRulesVersion"
    compile "com.f2prateek.rx.preferences:rx-preferences:$rootProject.rxPreferencesVersion"

    // Helpers
    compile "com.jakewharton.timber:timber:$rootProject.timberVersion"
    compile "com.karumi:dexter:$rootProject.dexterVersion"

    // Custom Views
    compile "com.github.john990:WaveView:$rootProject.waveViewVersion"
    compile "com.github.amlcurran.showcaseview:library:$rootProject.showcaseViewVersion"
    

    // Testing
    testCompile "junit:junit:$rootProject.jUnitVersion"
    testCompile "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testCompile "org.hamcrest:hamcrest-library:$rootProject.hamcrestVersion"
    // Prevent conflicts between the dependencies required by appcompat and com.android.support.test
    androidTestCompile "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    androidTestCompile "com.android.support.test:runner:$rootProject.androidTestRunnerVersion"
    androidTestCompile "com.android.support.test:rules:$rootProject.androidTestRunnerVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
}
repositories {
    mavenCentral()
}
